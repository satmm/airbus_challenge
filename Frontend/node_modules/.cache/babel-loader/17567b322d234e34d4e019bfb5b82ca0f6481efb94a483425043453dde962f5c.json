{"ast":null,"code":"var _jsxFileName = \"C:\\\\Airbus\\\\Frontend\\\\src\\\\Components\\\\FlightPathMap.js\";\nimport React from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlightPathMap = ({\n  departureAirport,\n  arrivalAirport,\n  route\n}) => {\n  // Create an empty array for filtered path coordinates\n  const filteredPathCoordinates = [];\n\n  // Filter the route data to include only departure and arrival\n  route.forEach(node => {\n    if (node.lat === departureAirport.location[0] && node.lon === departureAirport.location[1] || node.lat === arrivalAirport.location[0] && node.lon === arrivalAirport.location[1]) {\n      filteredPathCoordinates.push([node.lat, node.lon]);\n    }\n  });\n\n  // Custom airport icon\n  const airportIcon = L.icon({\n    iconUrl: 'https://cdn-icons-png.flaticon.com/512/447/447279.png',\n    iconSize: [25, 25],\n    iconAnchor: [12, 12]\n  });\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: filteredPathCoordinates[0],\n    zoom: 4,\n    style: {\n      height: '500px',\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: filteredPathCoordinates[0],\n      icon: airportIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [departureAirport.name, \" (\", departureAirport.code, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: filteredPathCoordinates[1],\n      icon: airportIcon,\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [arrivalAirport.name, \" (\", arrivalAirport.code, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Polyline, {\n      positions: filteredPathCoordinates,\n      color: \"blue\",\n      weight: 3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = FlightPathMap;\nexport default FlightPathMap;\nvar _c;\n$RefreshReg$(_c, \"FlightPathMap\");","map":{"version":3,"names":["React","MapContainer","TileLayer","Polyline","Marker","Popup","L","jsxDEV","_jsxDEV","FlightPathMap","departureAirport","arrivalAirport","route","filteredPathCoordinates","forEach","node","lat","location","lon","push","airportIcon","icon","iconUrl","iconSize","iconAnchor","center","zoom","style","height","width","children","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","position","name","code","positions","color","weight","_c","$RefreshReg$"],"sources":["C:/Airbus/Frontend/src/Components/FlightPathMap.js"],"sourcesContent":["import React from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\n\nconst FlightPathMap = ({ departureAirport, arrivalAirport, route }) => {\n  // Create an empty array for filtered path coordinates\n  const filteredPathCoordinates = [];\n\n  // Filter the route data to include only departure and arrival\n  route.forEach(node => {\n    if (\n      (node.lat === departureAirport.location[0] && node.lon === departureAirport.location[1]) ||\n      (node.lat === arrivalAirport.location[0] && node.lon === arrivalAirport.location[1])\n    ) {\n      filteredPathCoordinates.push([node.lat, node.lon]);\n    }\n  });\n\n  // Custom airport icon\n  const airportIcon = L.icon({\n    iconUrl: 'https://cdn-icons-png.flaticon.com/512/447/447279.png',\n    iconSize: [25, 25],\n    iconAnchor: [12, 12],\n  });\n\n  return (\n    <MapContainer center={filteredPathCoordinates[0]} zoom={4} style={{ height: '500px', width: '100%' }}>\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n        attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n      />\n\n      {/* Departure Airport Marker */}\n      <Marker position={filteredPathCoordinates[0]} icon={airportIcon}>\n        <Popup>{departureAirport.name} ({departureAirport.code})</Popup>\n      </Marker>\n\n      {/* Arrival Airport Marker */}\n      <Marker position={filteredPathCoordinates[1]} icon={airportIcon}>\n        <Popup>{arrivalAirport.name} ({arrivalAirport.code})</Popup>\n      </Marker>\n\n      {/* Flight Path Polyline */}\n      <Polyline positions={filteredPathCoordinates} color=\"blue\" weight={3} />\n    </MapContainer>\n  );\n};\n\nexport default FlightPathMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}