{"ast":null,"code":"var _jsxFileName = \"C:\\\\Airbus\\\\Frontend\\\\src\\\\Components\\\\FlightDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport airplane from \"../assests/airplane.png\";\nimport airport from \"../assests/airport.png\";\nimport './FlightDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlightDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [flight, setFlight] = useState(null);\n  const [weatherData, setWeatherData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const fetchFlightDetails = async () => {\n      try {\n        const response = await axios.get(`/api/flightplan/${id}`);\n        const flightData = response.data;\n        const weatherPromises = flightData.route.nodes.map(node => axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${node.lat}&lon=${node.lon}&appid=4c9c36bb42745e8c0226baf21bf2a583`));\n        const weatherResponses = await Promise.all(weatherPromises);\n        const weatherData = weatherResponses.map(res => res.data);\n        setFlight(flightData);\n        setWeatherData(weatherData);\n        setLoading(false); // Set loading to false after data is fetched\n      } catch (error) {\n        setError('Error fetching flight details: ' + error.message);\n        console.error('Error fetching flight details:', error);\n        setLoading(false); // Set loading to false on error\n      }\n    };\n    fetchFlightDetails();\n  }, [id]);\n  const kelvinToCelsius = kelvin => {\n    return kelvin - 273.15; // Conversion formula from Kelvin to Celsius\n  };\n  const calculateRouteWeight = (flight, weatherData) => {\n    // Extract altitude profile from flight notes\n    const notes = flight.notes.split('\\n');\n    const altitudeProfile = notes.slice(1, 7).map(note => parseInt(note.split(': ')[1]));\n\n    // Extract options from flight notes\n    const options = notes.slice(8).map(option => option.split(': ')[1] === 'yes' ? true : false);\n\n    // Ascent Rate: altitudeProfile[0]\n    // Ascent Speed: altitudeProfile[1]\n    // Cruise Altitude: altitudeProfile[2]\n    // Cruise Speed: altitudeProfile[3]\n    // Descent Rate: altitudeProfile[4]\n    // Descent Speed: altitudeProfile[5]\n    const routeWeight = altitudeProfile[0] + altitudeProfile[1] + altitudeProfile[4] + altitudeProfile[5];\n\n    // Additional weight based on options\n    if (options[0]) routeWeight += 10; // Use NATs\n    if (options[1]) routeWeight += 10; // Use PACOTS\n    if (options[2]) routeWeight += 5; // Use low airways\n    if (options[3]) routeWeight += 5; // Use high airways\n\n    // Calculate weight based on weather data\n    const weatherWeight = weatherData.reduce((totalWeight, data) => {\n      var _data$weather$;\n      const weatherDescription = (_data$weather$ = data.weather[0]) === null || _data$weather$ === void 0 ? void 0 : _data$weather$.description;\n      switch (weatherDescription) {\n        case 'clear sky':\n          return totalWeight + 1;\n        case 'few clouds':\n          return totalWeight + 2;\n        case 'scattered clouds':\n          return totalWeight + 3;\n        case 'broken clouds':\n          return totalWeight + 4;\n        case 'shower rain':\n          return totalWeight + 5;\n        case 'rain':\n          return totalWeight + 6;\n        case 'thunderstorm':\n          return totalWeight + 7;\n        case 'snow':\n          return totalWeight + 8;\n        case 'mist':\n          return totalWeight + 9;\n        default:\n          return totalWeight + 10;\n      }\n    }, 0);\n    return routeWeight + weatherWeight;\n  };\n\n  // Usage\n  const routeWeight = calculateRouteWeight(flight, weatherData);\n  console.log('Route Weight:', routeWeight);\n  useEffect(() => {\n    if (flight && weatherData.length === flight.route.nodes.length) {\n      const routeWeight = calculateRouteWeight(flight, weatherData);\n      console.log('Route Weight:', routeWeight);\n      // Use this weight to compare different routes and select the safest one\n    }\n  }, [flight, weatherData]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading || !flight) {\n    // Display loading spinner while loading\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading flight details...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this);\n  }\n  const pathCoordinates = flight.route.nodes.map(node => [node.lat, node.lon]);\n\n  // Blue airplane icon for departure\n  const departureIcon = new L.Icon({\n    iconUrl: airplane,\n    // Use airplane icon\n    iconSize: [25, 25]\n  });\n\n  // Red airplane icon for arrival\n  const arrivalIcon = new L.Icon({\n    iconUrl: airplane,\n    // Use airplane icon\n    iconSize: [25, 25],\n    iconAnchor: [12.5, 12.5] // Center the icon\n  });\n  const waypointIcon = new L.Icon({\n    iconUrl: airport,\n    // Use airplane icon\n    iconSize: [10, 10],\n    iconAnchor: [6, 6] // Center the icon\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flight-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flight-info card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Flight Detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Path ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 12\n        }, this), \" \", flight.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Departure Airport:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 12\n        }, this), \" \", flight.fromName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Arrival Airport:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 12\n        }, this), \" \", flight.toName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Distance:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 12\n        }, this), \" \", flight.distance.toFixed(2), \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"From ICAO:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 12\n        }, this), \" \", flight.fromICAO]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"To ICAO:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 12\n        }, this), \" \", flight.toICAO]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: pathCoordinates[0],\n        zoom: 5,\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: pathCoordinates[0],\n          icon: departureIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [flight.fromName, \" (\", flight.fromICAO, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: pathCoordinates[pathCoordinates.length - 1],\n          icon: arrivalIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [flight.toName, \" (\", flight.toICAO, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), flight.route.nodes.map((node, index) => {\n          var _weatherData$index, _weatherData$index$we, _weatherData$index2, _weatherData$index2$m, _weatherData$index3, _weatherData$index3$m, _weatherData$index4, _weatherData$index5, _weatherData$index5$w, _weatherData$index6, _weatherData$index6$s, _weatherData$index7, _weatherData$index7$s;\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: [node.lat, node.lon],\n            icon: waypointIcon,\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  color: 'blue',\n                  fontWeight: 'bold'\n                },\n                children: [node.ident, \": \", node.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 101\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Weather: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 17\n              }, this), \" \", (_weatherData$index = weatherData[index]) === null || _weatherData$index === void 0 ? void 0 : (_weatherData$index$we = _weatherData$index.weather[0]) === null || _weatherData$index$we === void 0 ? void 0 : _weatherData$index$we.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 79\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Temperature:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 17\n              }, this), \" \", kelvinToCelsius((_weatherData$index2 = weatherData[index]) === null || _weatherData$index2 === void 0 ? void 0 : (_weatherData$index2$m = _weatherData$index2.main) === null || _weatherData$index2$m === void 0 ? void 0 : _weatherData$index2$m.temp).toFixed(2), \" \\xB0C\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 100\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Humidity:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 17\n              }, this), \" \", (_weatherData$index3 = weatherData[index]) === null || _weatherData$index3 === void 0 ? void 0 : (_weatherData$index3$m = _weatherData$index3.main) === null || _weatherData$index3$m === void 0 ? void 0 : _weatherData$index3$m.humidity, \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 71\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Visibility:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 17\n              }, this), \" \", (_weatherData$index4 = weatherData[index]) === null || _weatherData$index4 === void 0 ? void 0 : _weatherData$index4.visibility, \" meters\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 75\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Wind Speed:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this), \" \", (_weatherData$index5 = weatherData[index]) === null || _weatherData$index5 === void 0 ? void 0 : (_weatherData$index5$w = _weatherData$index5.wind) === null || _weatherData$index5$w === void 0 ? void 0 : _weatherData$index5$w.speed, \" m/s\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 73\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Sunrise:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 17\n              }, this), \" \", new Date(((_weatherData$index6 = weatherData[index]) === null || _weatherData$index6 === void 0 ? void 0 : (_weatherData$index6$s = _weatherData$index6.sys) === null || _weatherData$index6$s === void 0 ? void 0 : _weatherData$index6$s.sunrise) * 1000).toLocaleTimeString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 105\n              }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Sunset:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 17\n              }, this), \" \", new Date(((_weatherData$index7 = weatherData[index]) === null || _weatherData$index7 === void 0 ? void 0 : (_weatherData$index7$s = _weatherData$index7.sys) === null || _weatherData$index7$s === void 0 ? void 0 : _weatherData$index7$s.sunset) * 1000).toLocaleTimeString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 103\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: pathCoordinates,\n          color: \"blue\",\n          weight: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightDetail, \"9jVJTIkZe6rDtXBZdz0AwYhuYzQ=\", false, function () {\n  return [useParams];\n});\n_c = FlightDetail;\nexport default FlightDetail;\nvar _c;\n$RefreshReg$(_c, \"FlightDetail\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Polyline","Marker","Popup","L","useParams","axios","airplane","airport","jsxDEV","_jsxDEV","FlightDetail","_s","id","flight","setFlight","weatherData","setWeatherData","error","setError","loading","setLoading","fetchFlightDetails","response","get","flightData","data","weatherPromises","route","nodes","map","node","lat","lon","weatherResponses","Promise","all","res","message","console","kelvinToCelsius","kelvin","calculateRouteWeight","notes","split","altitudeProfile","slice","note","parseInt","options","option","routeWeight","weatherWeight","reduce","totalWeight","_data$weather$","weatherDescription","weather","description","log","length","children","fileName","_jsxFileName","lineNumber","columnNumber","className","pathCoordinates","departureIcon","Icon","iconUrl","iconSize","arrivalIcon","iconAnchor","waypointIcon","fromName","toName","distance","toFixed","fromICAO","toICAO","center","zoom","style","height","width","url","attribution","position","icon","index","_weatherData$index","_weatherData$index$we","_weatherData$index2","_weatherData$index2$m","_weatherData$index3","_weatherData$index3$m","_weatherData$index4","_weatherData$index5","_weatherData$index5$w","_weatherData$index6","_weatherData$index6$s","_weatherData$index7","_weatherData$index7$s","color","fontWeight","ident","name","main","temp","humidity","visibility","wind","speed","Date","sys","sunrise","toLocaleTimeString","sunset","positions","weight","_c","$RefreshReg$"],"sources":["C:/Airbus/Frontend/src/Components/FlightDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';  \nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport airplane from \"../assests/airplane.png\"; \nimport airport from \"../assests/airport.png\";\nimport './FlightDetail.css';\n\nconst FlightDetail = () => {\n  const { id } = useParams();\n  const [flight, setFlight] = useState(null);\n  const [weatherData, setWeatherData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const fetchFlightDetails = async () => {\n      try {\n        const response = await axios.get(`/api/flightplan/${id}`);\n        const flightData = response.data;\n\n        const weatherPromises = flightData.route.nodes.map(node =>\n          axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${node.lat}&lon=${node.lon}&appid=4c9c36bb42745e8c0226baf21bf2a583`)\n        );\n\n        const weatherResponses = await Promise.all(weatherPromises);\n        const weatherData = weatherResponses.map(res => res.data);\n\n        setFlight(flightData);\n        setWeatherData(weatherData);\n        setLoading(false); // Set loading to false after data is fetched\n      } catch (error) {\n        setError('Error fetching flight details: ' + error.message);\n        console.error('Error fetching flight details:', error);\n        setLoading(false); // Set loading to false on error\n      }\n    };\n\n    fetchFlightDetails();\n  }, [id]);\n\n\n\n  const kelvinToCelsius = (kelvin) => {\n    return kelvin - 273.15; // Conversion formula from Kelvin to Celsius\n  };\n\n  const calculateRouteWeight = (flight, weatherData) => {\n    // Extract altitude profile from flight notes\n    const notes = flight.notes.split('\\n');\n    const altitudeProfile = notes.slice(1, 7).map(note => parseInt(note.split(': ')[1]));\n\n    // Extract options from flight notes\n    const options = notes.slice(8).map(option => option.split(': ')[1] === 'yes' ? true : false);\n\n    // Ascent Rate: altitudeProfile[0]\n    // Ascent Speed: altitudeProfile[1]\n    // Cruise Altitude: altitudeProfile[2]\n    // Cruise Speed: altitudeProfile[3]\n    // Descent Rate: altitudeProfile[4]\n    // Descent Speed: altitudeProfile[5]\n    const routeWeight = altitudeProfile[0] + altitudeProfile[1] + altitudeProfile[4] + altitudeProfile[5];\n\n    // Additional weight based on options\n    if (options[0]) routeWeight += 10; // Use NATs\n    if (options[1]) routeWeight += 10; // Use PACOTS\n    if (options[2]) routeWeight += 5; // Use low airways\n    if (options[3]) routeWeight += 5; // Use high airways\n\n    // Calculate weight based on weather data\n    const weatherWeight = weatherData.reduce((totalWeight, data) => {\n      const weatherDescription = data.weather[0]?.description;\n      switch (weatherDescription) {\n        case 'clear sky':\n          return totalWeight + 1;\n        case 'few clouds':\n          return totalWeight + 2;\n        case 'scattered clouds':\n          return totalWeight + 3;\n        case 'broken clouds':\n          return totalWeight + 4;\n        case 'shower rain':\n          return totalWeight + 5;\n        case 'rain':\n          return totalWeight + 6;\n        case 'thunderstorm':\n          return totalWeight + 7;\n        case 'snow':\n          return totalWeight + 8;\n        case 'mist':\n          return totalWeight + 9;\n        default:\n          return totalWeight + 10;\n      }\n    }, 0);\n\n    return routeWeight + weatherWeight;\n  };\n\n  // Usage\n  const routeWeight = calculateRouteWeight(flight, weatherData);\n  console.log('Route Weight:', routeWeight);\n\n\n  useEffect(() => {\n    if (flight && weatherData.length === flight.route.nodes.length) {\n      const routeWeight = calculateRouteWeight(flight, weatherData);\n      console.log('Route Weight:', routeWeight);\n      // Use this weight to compare different routes and select the safest one\n    }\n  }, [flight, weatherData]);\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  if (loading || !flight) { // Display loading spinner while loading\n    return (\n      <div className=\"loading-spinner\">\n        <div className=\"spinner\"></div>\n        <p>Loading flight details...</p>\n      </div>\n    );\n  }\n\n  const pathCoordinates = flight.route.nodes.map(node => [node.lat, node.lon]);\n\n\n  // Blue airplane icon for departure\n  const departureIcon = new L.Icon({\n    iconUrl: airplane, // Use airplane icon\n    iconSize: [25, 25],\n  });\n\n  // Red airplane icon for arrival\n  const arrivalIcon = new L.Icon({\n    iconUrl: airplane, // Use airplane icon\n    iconSize: [25, 25],\n    iconAnchor: [12.5, 12.5], // Center the icon\n  });\n\n  const waypointIcon = new L.Icon({\n    iconUrl: airport, // Use airplane icon\n    iconSize: [10, 10],\n    iconAnchor: [6, 6], // Center the icon\n  });\n\n  return (\n    <div className=\"flight-detail-container\">\n      <div className=\"flight-info card\">\n        <h1>Flight Detail</h1>\n        <p><strong>Path ID:</strong> {flight.id}</p>\n        <p><strong>Departure Airport:</strong> {flight.fromName}</p>\n        <p><strong>Arrival Airport:</strong> {flight.toName}</p>\n        <p><strong>Distance:</strong> {flight.distance.toFixed(2)} km</p>\n        <p><strong>From ICAO:</strong> {flight.fromICAO}</p>\n        <p><strong>To ICAO:</strong> {flight.toICAO}</p>\n      </div>\n\n      <div className=\"map-container\">\n        <MapContainer center={pathCoordinates[0]} zoom={5} style={{ height: '100%', width: '100%' }}>\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          />\n\n          <Marker position={pathCoordinates[0]} icon={departureIcon}>\n            <Popup>{flight.fromName} ({flight.fromICAO})</Popup>\n          </Marker>\n\n          <Marker position={pathCoordinates[pathCoordinates.length - 1]} icon={arrivalIcon}>\n            <Popup>{flight.toName} ({flight.toICAO})</Popup>\n          </Marker>\n\n          {flight.route.nodes.map((node, index) => (\n            <Marker key={index} position={[node.lat, node.lon]} icon={waypointIcon}>\n              <Popup>\n                <span style={{ color: 'blue', fontWeight: 'bold' }}>{node.ident}: {node.name}</span><br />\n                <b>Weather: </b> {weatherData[index]?.weather[0]?.description}<br />\n                <b>Temperature:</b> {kelvinToCelsius(weatherData[index]?.main?.temp).toFixed(2)} °C<br />\n                <b>Humidity:</b> {weatherData[index]?.main?.humidity}%<br />\n                <b>Visibility:</b> {weatherData[index]?.visibility} meters<br />\n                <b>Wind Speed:</b> {weatherData[index]?.wind?.speed} m/s<br />\n                <b>Sunrise:</b> {new Date(weatherData[index]?.sys?.sunrise * 1000).toLocaleTimeString()}<br />\n                <b>Sunset:</b> {new Date(weatherData[index]?.sys?.sunset * 1000).toLocaleTimeString()}<br />\n              </Popup>\n            </Marker>\n          ))}\n\n\n          <Polyline positions={pathCoordinates} color=\"blue\" weight={3} />\n        </MapContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default FlightDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}