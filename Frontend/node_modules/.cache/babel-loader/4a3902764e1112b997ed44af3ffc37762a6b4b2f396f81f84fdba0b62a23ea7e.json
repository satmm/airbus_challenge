{"ast":null,"code":"var _jsxFileName = \"C:\\\\Airbus\\\\Frontend\\\\src\\\\Components\\\\FlightDetail.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport airplane from \"../assests/airplane.png\";\nimport airport from \"../assests/airport.png\";\nimport './FlightDetail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FlightDetail = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [flight, setFlight] = useState(null);\n  const [weatherData, setWeatherData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const fetchFlightDetails = async () => {\n      try {\n        const response = await axios.get(`/api/flightplan/${id}`);\n        const flightData = response.data;\n        const weatherPromises = flightData.route.nodes.map(node => axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${node.lat}&lon=${node.lon}&appid=4c9c36bb42745e8c0226baf21bf2a583`));\n        const weatherResponses = await Promise.all(weatherPromises);\n        const weatherData = weatherResponses.map(res => res.data);\n        setFlight(flightData);\n        setWeatherData(weatherData);\n        setLoading(false); // Set loading to false after data is fetched\n      } catch (error) {\n        setError('Error fetching flight details: ' + error.message);\n        console.error('Error fetching flight details:', error);\n        setLoading(false); // Set loading to false on error\n      }\n    };\n    fetchFlightDetails();\n  }, [id]);\n  const getWeatherWeight = weather => {\n    switch (weather) {\n      case 'clear sky':\n        return 1;\n      case 'few clouds':\n        return 2;\n      case 'scattered clouds':\n        return 3;\n      case 'broken clouds':\n        return 4;\n      case 'shower rain':\n        return 5;\n      case 'rain':\n        return 6;\n      case 'thunderstorm':\n        return 7;\n      case 'snow':\n        return 8;\n      case 'mist':\n        return 9;\n      default:\n        return 10;\n    }\n  };\n  const calculateRouteWeight = (flight, weatherData) => {\n    return flight.route.nodes.reduce((totalWeight, node, index) => {\n      var _weatherData$index, _weatherData$index$we;\n      const weather = (_weatherData$index = weatherData[index]) === null || _weatherData$index === void 0 ? void 0 : (_weatherData$index$we = _weatherData$index.weather[0]) === null || _weatherData$index$we === void 0 ? void 0 : _weatherData$index$we.description;\n      const weight = getWeatherWeight(weather);\n      return totalWeight + weight;\n    }, 0);\n  };\n  useEffect(() => {\n    if (flight && weatherData.length === flight.route.nodes.length) {\n      const routeWeight = calculateRouteWeight(flight, weatherData);\n      console.log('Route Weight:', routeWeight);\n      // Use this weight to compare different routes and select the safest one\n    }\n  }, [flight, weatherData]);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading || !flight) {\n    // Display loading spinner while loading\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-spinner\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading flight details...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this);\n  }\n  const pathCoordinates = flight.route.nodes.map(node => [node.lat, node.lon]);\n\n  // Blue airplane icon for departure\n  const departureIcon = new L.Icon({\n    iconUrl: airplane,\n    // Use airplane icon\n    iconSize: [25, 25]\n  });\n\n  // Red airplane icon for arrival\n  const arrivalIcon = new L.Icon({\n    iconUrl: airplane,\n    // Use airplane icon\n    iconSize: [25, 25],\n    iconAnchor: [12.5, 12.5] // Center the icon\n  });\n  const waypointIcon = new L.Icon({\n    iconUrl: airport,\n    // Use airplane icon\n    iconSize: [10, 10],\n    iconAnchor: [6, 6] // Center the icon\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flight-detail-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flight-info card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Flight Detail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Path ID:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 12\n        }, this), \" \", flight.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Departure Airport:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 12\n        }, this), \" \", flight.fromName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Arrival Airport:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 12\n        }, this), \" \", flight.toName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Distance:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 12\n        }, this), \" \", flight.distance.toFixed(2), \" km\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"From ICAO:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 12\n        }, this), \" \", flight.fromICAO]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"To ICAO:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 12\n        }, this), \" \", flight.toICAO]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      children: /*#__PURE__*/_jsxDEV(MapContainer, {\n        center: pathCoordinates[0],\n        zoom: 5,\n        style: {\n          height: '100%',\n          width: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n          url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n          attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: pathCoordinates[0],\n          icon: departureIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [flight.fromName, \" (\", flight.fromICAO, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Marker, {\n          position: pathCoordinates[pathCoordinates.length - 1],\n          icon: arrivalIcon,\n          children: /*#__PURE__*/_jsxDEV(Popup, {\n            children: [flight.toName, \" (\", flight.toICAO, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), flight.route.nodes.slice(1, -1).map((node, index) => {\n          var _weatherData$index2, _weatherData$index2$w, _weatherData$index3, _weatherData$index3$m, _weatherData$index4, _weatherData$index4$m, _weatherData$index5, _weatherData$index5$m, _weatherData$index6, _weatherData$index6$s, _weatherData$index7, _weatherData$index7$s, _weatherData$index8, _weatherData$index9, _weatherData$index9$w;\n          return /*#__PURE__*/_jsxDEV(Marker, {\n            position: [node.lat, node.lon],\n            icon: waypointIcon,\n            children: /*#__PURE__*/_jsxDEV(Popup, {\n              children: [node.ident, \": \", node.name, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 42\n              }, this), \"Weather: \", (_weatherData$index2 = weatherData[index]) === null || _weatherData$index2 === void 0 ? void 0 : (_weatherData$index2$w = _weatherData$index2.weather[0]) === null || _weatherData$index2$w === void 0 ? void 0 : _weatherData$index2$w.description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 71\n              }, this), \"Temperature: \", (_weatherData$index3 = weatherData[index]) === null || _weatherData$index3 === void 0 ? void 0 : (_weatherData$index3$m = _weatherData$index3.main) === null || _weatherData$index3$m === void 0 ? void 0 : _weatherData$index3$m.temp, \" K\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 64\n              }, this), \"Pressure: \", (_weatherData$index4 = weatherData[index]) === null || _weatherData$index4 === void 0 ? void 0 : (_weatherData$index4$m = _weatherData$index4.main) === null || _weatherData$index4$m === void 0 ? void 0 : _weatherData$index4$m.pressure, \" hPa\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 67\n              }, this), \"Humidity: \", (_weatherData$index5 = weatherData[index]) === null || _weatherData$index5 === void 0 ? void 0 : (_weatherData$index5$m = _weatherData$index5.main) === null || _weatherData$index5$m === void 0 ? void 0 : _weatherData$index5$m.humidity, \"%\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 64\n              }, this), \"Sunrise: \", new Date(((_weatherData$index6 = weatherData[index]) === null || _weatherData$index6 === void 0 ? void 0 : (_weatherData$index6$s = _weatherData$index6.sys) === null || _weatherData$index6$s === void 0 ? void 0 : _weatherData$index6$s.sunrise) * 1000).toLocaleTimeString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 98\n              }, this), \"Sunset: \", new Date(((_weatherData$index7 = weatherData[index]) === null || _weatherData$index7 === void 0 ? void 0 : (_weatherData$index7$s = _weatherData$index7.sys) === null || _weatherData$index7$s === void 0 ? void 0 : _weatherData$index7$s.sunset) * 1000).toLocaleTimeString(), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 96\n              }, this), \"Visibility: \", (_weatherData$index8 = weatherData[index]) === null || _weatherData$index8 === void 0 ? void 0 : _weatherData$index8.visibility, \" meters\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 68\n              }, this), \"Wind Speed: \", (_weatherData$index9 = weatherData[index]) === null || _weatherData$index9 === void 0 ? void 0 : (_weatherData$index9$w = _weatherData$index9.wind) === null || _weatherData$index9$w === void 0 ? void 0 : _weatherData$index9$w.speed, \" m/s\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 66\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this);\n        }), \"))}\", /*#__PURE__*/_jsxDEV(Polyline, {\n          positions: pathCoordinates,\n          color: \"blue\",\n          weight: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(FlightDetail, \"9jVJTIkZe6rDtXBZdz0AwYhuYzQ=\", false, function () {\n  return [useParams];\n});\n_c = FlightDetail;\nexport default FlightDetail;\nvar _c;\n$RefreshReg$(_c, \"FlightDetail\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Polyline","Marker","Popup","L","useParams","axios","airplane","airport","jsxDEV","_jsxDEV","FlightDetail","_s","id","flight","setFlight","weatherData","setWeatherData","error","setError","loading","setLoading","fetchFlightDetails","response","get","flightData","data","weatherPromises","route","nodes","map","node","lat","lon","weatherResponses","Promise","all","res","message","console","getWeatherWeight","weather","calculateRouteWeight","reduce","totalWeight","index","_weatherData$index","_weatherData$index$we","description","weight","length","routeWeight","log","children","fileName","_jsxFileName","lineNumber","columnNumber","className","pathCoordinates","departureIcon","Icon","iconUrl","iconSize","arrivalIcon","iconAnchor","waypointIcon","fromName","toName","distance","toFixed","fromICAO","toICAO","center","zoom","style","height","width","url","attribution","position","icon","slice","_weatherData$index2","_weatherData$index2$w","_weatherData$index3","_weatherData$index3$m","_weatherData$index4","_weatherData$index4$m","_weatherData$index5","_weatherData$index5$m","_weatherData$index6","_weatherData$index6$s","_weatherData$index7","_weatherData$index7$s","_weatherData$index8","_weatherData$index9","_weatherData$index9$w","ident","name","main","temp","pressure","humidity","Date","sys","sunrise","toLocaleTimeString","sunset","visibility","wind","speed","positions","color","_c","$RefreshReg$"],"sources":["C:/Airbus/Frontend/src/Components/FlightDetail.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { MapContainer, TileLayer, Polyline, Marker, Popup } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport L from 'leaflet';  \nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport airplane from \"../assests/airplane.png\"; \nimport airport from \"../assests/airport.png\";\nimport './FlightDetail.css';\n\nconst FlightDetail = () => {\n  const { id } = useParams();\n  const [flight, setFlight] = useState(null);\n  const [weatherData, setWeatherData] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(true); // Add loading state\n\n  useEffect(() => {\n    const fetchFlightDetails = async () => {\n      try {\n        const response = await axios.get(`/api/flightplan/${id}`);\n        const flightData = response.data;\n\n        const weatherPromises = flightData.route.nodes.map(node =>\n          axios.get(`https://api.openweathermap.org/data/2.5/weather?lat=${node.lat}&lon=${node.lon}&appid=4c9c36bb42745e8c0226baf21bf2a583`)\n        );\n\n        const weatherResponses = await Promise.all(weatherPromises);\n        const weatherData = weatherResponses.map(res => res.data);\n\n        setFlight(flightData);\n        setWeatherData(weatherData);\n        setLoading(false); // Set loading to false after data is fetched\n      } catch (error) {\n        setError('Error fetching flight details: ' + error.message);\n        console.error('Error fetching flight details:', error);\n        setLoading(false); // Set loading to false on error\n      }\n    };\n\n    fetchFlightDetails();\n  }, [id]);\n\n  const getWeatherWeight = (weather) => {\n    switch (weather) {\n      case 'clear sky':\n        return 1;\n      case 'few clouds':\n        return 2;\n      case 'scattered clouds':\n        return 3;\n      case 'broken clouds':\n        return 4;\n      case 'shower rain':\n        return 5;\n      case 'rain':\n        return 6;\n      case 'thunderstorm':\n        return 7;\n      case 'snow':\n        return 8;\n      case 'mist':\n        return 9;\n      default:\n        return 10;\n    }\n  };\n\n  const calculateRouteWeight = (flight, weatherData) => {\n    return flight.route.nodes.reduce((totalWeight, node, index) => {\n      const weather = weatherData[index]?.weather[0]?.description;\n      const weight = getWeatherWeight(weather);\n      return totalWeight + weight;\n    }, 0);\n  };\n\n  useEffect(() => {\n    if (flight && weatherData.length === flight.route.nodes.length) {\n      const routeWeight = calculateRouteWeight(flight, weatherData);\n      console.log('Route Weight:', routeWeight);\n      // Use this weight to compare different routes and select the safest one\n    }\n  }, [flight, weatherData]);\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  if (loading || !flight) { // Display loading spinner while loading\n    return (\n      <div className=\"loading-spinner\">\n        <div className=\"spinner\"></div>\n        <p>Loading flight details...</p>\n      </div>\n    );\n  }\n\n  const pathCoordinates = flight.route.nodes.map(node => [node.lat, node.lon]);\n\n\n  // Blue airplane icon for departure\n  const departureIcon = new L.Icon({\n    iconUrl: airplane, // Use airplane icon\n    iconSize: [25, 25],\n  });\n\n  // Red airplane icon for arrival\n  const arrivalIcon = new L.Icon({\n    iconUrl: airplane, // Use airplane icon\n    iconSize: [25, 25],\n    iconAnchor: [12.5, 12.5], // Center the icon\n  });\n\n  const waypointIcon = new L.Icon({\n    iconUrl: airport, // Use airplane icon\n    iconSize: [10, 10],\n    iconAnchor: [6, 6], // Center the icon\n  });\n\n  return (\n    <div className=\"flight-detail-container\">\n      <div className=\"flight-info card\">\n        <h1>Flight Detail</h1>\n        <p><strong>Path ID:</strong> {flight.id}</p>\n        <p><strong>Departure Airport:</strong> {flight.fromName}</p>\n        <p><strong>Arrival Airport:</strong> {flight.toName}</p>\n        <p><strong>Distance:</strong> {flight.distance.toFixed(2)} km</p>\n        <p><strong>From ICAO:</strong> {flight.fromICAO}</p>\n        <p><strong>To ICAO:</strong> {flight.toICAO}</p>\n      </div>\n\n      <div className=\"map-container\">\n        <MapContainer center={pathCoordinates[0]} zoom={5} style={{ height: '100%', width: '100%' }}>\n          <TileLayer\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n            attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\n          />\n\n          <Marker position={pathCoordinates[0]} icon={departureIcon}>\n            <Popup>{flight.fromName} ({flight.fromICAO})</Popup>\n          </Marker>\n\n          <Marker position={pathCoordinates[pathCoordinates.length - 1]} icon={arrivalIcon}>\n            <Popup>{flight.toName} ({flight.toICAO})</Popup>\n          </Marker>\n\n          {flight.route.nodes.slice(1, -1).map((node, index) => (\n            <Marker key={index} position={[node.lat, node.lon]} icon={waypointIcon}>\n              <Popup>\n                {node.ident}: {node.name}<br />\n                Weather: {weatherData[index]?.weather[0]?.description}<br />\n                Temperature: {weatherData[index]?.main?.temp} K<br />\n                Pressure: {weatherData[index]?.main?.pressure} hPa<br />\n                Humidity: {weatherData[index]?.main?.humidity}%<br />\n                Sunrise: {new Date(weatherData[index]?.sys?.sunrise * 1000).toLocaleTimeString()}<br />\n                Sunset: {new Date(weatherData[index]?.sys?.sunset * 1000).toLocaleTimeString()}<br />\n                Visibility: {weatherData[index]?.visibility} meters<br />\n                Wind Speed: {weatherData[index]?.wind?.speed} m/s<br />\n              </Popup>\n            </Marker>\n          ))}\n\n          ))}\n\n          <Polyline positions={pathCoordinates} color=\"blue\" weight={3} />\n        </MapContainer>\n      </div>\n    </div>\n  );\n};\n\nexport default FlightDetail;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}